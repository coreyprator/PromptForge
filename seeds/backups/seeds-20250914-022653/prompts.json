[
  {
    "id": 1,
    "created_at": "2025-09-06T07:36:03Z",
    "scenario": "troubleshooting",
    "task": "Fix error in code.",
    "content": "RULES (read carefully; apply before anything else)\nR1. Return ENTIRE FILES only, never diffs or snippets.\nR2. Preserve all logging / progress / history features unchanged.\nR3. No prose outside file blocks. One file per block.\n\nOUTPUT CONTRACT\n- Use file blocks delimited by: ```file ... ```\n- Fields required in each block: path, language, contents\n- One file per block. Emit ENTIRE FILES only.\n\nEXAMPLE\n```file\npath: src/module.py\nlanguage: python\ncontents:\n<full file contents here>\n```\n\nSENTINELS\n- Start marker: ### FILE OUTPUT START relative file name, line count  ###\n- End marker: ### END OF OUTPUT ###\n- Self-check line (must appear before first file block): ✔ R1 ✔ R2 ✔ R3\n\nSCENARIO: Troubleshooting\nDESCRIPTION: Provide debugging guidance and code changes while obeying rule R1 (full files) and R2 (logging preserved).\n\nTASK\nFix error in code.\n\nCONTEXT\nTool tips not workign\n\nERRORS\nPS G:\\My Drive\\Code\\Python\\cubist_art> & \"G:\\My Drive\\Code\\Python\\cubist_art\\.venv\\Scripts\\Activate.ps1\"\n(.venv) PS G:\\My Drive\\Code\\Python\\cubist_art> python tools\\apply_from_zip.py tools\\promptforge_fixed_gui_v1_4.zip --verify --backup\nWROTE tools/promptforge.py lines=744 sha256=8ee8f67457632c6a2480c8f5cb143991607bbc97d19fa78890cd46e56660faa5\n---\nApplied 1 files; verify=True\n(.venv) PS G:\\My Drive\\Code\\Python\\cubist_art> python tools/promptforge.py gui                                    \n>> \n(.venv) PS G:\\My Drive\\Code\\Python\\cubist_art> python tools/promptforge.py gui\n>> \n(.venv) PS G:\\My Drive\\Code\\Python\\cubist_art> python tools/promptforge.py gui\n>> \nException in Tkinter callback\nTraceback (most recent call last):\n  File \"C:\\Users\\Owner\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\tkinter\\__init__.py\", line 2068, in __call__\n    return self.func(*args)\n           ~~~~~~~~~^^^^^^^\n  File \"C:\\Users\\Owner\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\tkinter\\__init__.py\", line 862, in callit\n    func(*args)\n    ~~~~^^^^^^^\n  File \"G:\\My Drive\\Code\\Python\\cubist_art\\tools\\promptforge.py\", line 537, in _show\n    self._tip = tw = tkinter.Toplevel(self.widget)\n                     ^^^^^^^\nNameError: name 'tkinter' is not defined. Did you forget to import 'tkinter'?\nException in Tkinter callback\nTraceback (most recent call last):\n  File \"C:\\Users\\Owner\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\tkinter\\__init__.py\", line 2068, in __call__\n    return self.func(*args)\n           ~~~~~~~~~^^^^^^^\n  File \"C:\\Users\\Owner\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\tkinter\\__init__.py\", line 862, in callit      \n    func(*args)\n    ~~~~^^^^^^^\n  File \"G:\\My Drive\\Code\\Python\\cubist_art\\tools\\promptforge.py\", line 537, in _show\n    self._tip = tw = tkinter.Toplevel(self.widget)\n                     ^^^^^^^\nNameError: name 'tkinter' is not defined. Did you forget to import 'tkinter'?\n\nOBSERVED_BEHAVIOR\nNo tool tips\n\nEXPECTED_BEHAVIOR\nMove mouse over field lable to see tool tips.\n\nREPRO_STEPS\n(none)\n\nEXTRA DIRECTIVES\n- When proposing code changes, emit ENTIRE FILES per OUTPUT CONTRACT.\n- If multiple files are needed, emit one file block per file.\n- If you must explain, create a separate META.md as a full file block.\n\nRESPONSE REQUIREMENTS\n1) First line must be the self-check line exactly as below.\n2) Then emit the start sentinel.\n3) Then only file blocks per OUTPUT CONTRACT.\n4) Finish with the end sentinel.\n\nSELF-CHECK LINE\n✔ R1 ✔ R2 ✔ R3\n\nBEGIN RESPONSE WITH:\n✔ R1 ✔ R2 ✔ R3\n### FILE OUTPUT START relative file name, line count  ###"
  },
  {
    "id": 2,
    "created_at": "2025-09-06T07:44:37Z",
    "scenario": "troubleshooting",
    "task": "",
    "content": "RULES (read carefully; apply before anything else)\nR1. Return ENTIRE FILES only, never diffs or snippets.\nR2. Preserve all logging / progress / history features unchanged.\nR3. No prose outside file blocks. One file per block.\n\nOUTPUT CONTRACT\n- Use file blocks delimited by: ```file ... ```\n- Fields required in each block: path, language, contents\n- One file per block. Emit ENTIRE FILES only.\n\nEXAMPLE\n```file\npath: src/module.py\nlanguage: python\ncontents:\n<full file contents here>\n```\n\nSENTINELS\n- Start marker: ### FILE OUTPUT START relative file name, line count  ###\n- End marker: ### END OF OUTPUT ###\n- Self-check line (must appear before first file block): ✔ R1 ✔ R2 ✔ R3\n\nSCENARIO: Troubleshooting\nDESCRIPTION: Provide debugging guidance and code changes while obeying rule R1 (full files) and R2 (logging preserved).\n\nTASK\n\n\nCONTEXT\n(none)\n\nERRORS\n(none)\n\nOBSERVED_BEHAVIOR\n(none)\n\nEXPECTED_BEHAVIOR\n(none)\n\nREPRO_STEPS\n(none)\n\nEXTRA DIRECTIVES\n- When proposing code changes, emit ENTIRE FILES per OUTPUT CONTRACT.\n- If multiple files are needed, emit one file block per file.\n- If you must explain, create a separate META.md as a full file block.\n\nNOTES\nComment out the top header info in code delivery: path: tools/promptforge.py\nlanguage: python\ncontents:\n\nRESPONSE REQUIREMENTS\n1) First line must be the self-check line exactly as below.\n2) Then emit the start sentinel.\n3) Then only file blocks per OUTPUT CONTRACT.\n4) Finish with the end sentinel.\n\nSELF-CHECK LINE\n✔ R1 ✔ R2 ✔ R3\n\nBEGIN RESPONSE WITH:\n✔ R1 ✔ R2 ✔ R3\n### FILE OUTPUT START relative file name, line count  ###"
  },
  {
    "id": 3,
    "created_at": "2025-09-06T10:00:23Z",
    "scenario": "troubleshooting",
    "task": "refresh the history tab  after a Save to DB.",
    "content": "RULES (read carefully; apply before anything else)\nR1. Return ENTIRE FILES only, never diffs or snippets.\nR2. Preserve all logging / progress / history features unchanged.\nR3. No prose outside file blocks. One file per block.\n\nOUTPUT CONTRACT\n- Use file blocks delimited by: ```file ... ```\n- Fields required in each block: path, language, contents\n- One file per block. Emit ENTIRE FILES only.\n\nEXAMPLE\n```file\npath: src/module.py\nlanguage: python\ncontents:\n<full file contents here>\n```\n\nSENTINELS\n- Start marker: ### FILE OUTPUT START relative file name, line count  ###\n- End marker: ### END OF OUTPUT ###\n- Self-check line (must appear before first file block): ✔ R1 ✔ R2 ✔ R3\n\nSCENARIO: Troubleshooting\nDESCRIPTION: Provide debugging guidance and code changes while obeying rule R1 (full files) and R2 (logging preserved).\n\nTASK\nrefresh the history tab  after a Save to DB.\n\nCONTEXT\nG:\\My Drive\\Code\\Python\\cubist_art\\tools\\promptforge.py\n\nERRORS\nWhen you send code files, you add at the top information that isn't code:\npath: tools/promptforge.py\nlanguage: python\ncontents:\nIt needs to be commented or outside the code copy/paste box.\t\t\n\nPromptForge app needs to refresh the history tab  after a Save to DB.  \n\nAdd a preview and retreive button to pull an item into the prompt form.\n\nOBSERVED_BEHAVIOR\nCause code bugs\n\nEXPECTED_BEHAVIOR\nComment out that information in the code text box.\nall code needs to be smoke tested\n\nREPRO_STEPS\nTo reproduce the problem for: app needs to refresh the history page after a Save to DB. \n1. Create content in Prompt tab. \n2. Click Save to DB\n3. Click History\n4. You should see the new DB item.\n\nEXTRA DIRECTIVES\n- When proposing code changes, emit ENTIRE FILES per OUTPUT CONTRACT.\n- If multiple files are needed, emit one file block per file.\n- If you must explain, create a separate META.md as a full file block.\n\nRESPONSE REQUIREMENTS\n1) First line must be the self-check line exactly as below.\n2) Then emit the start sentinel.\n3) Then only file blocks per OUTPUT CONTRACT.\n4) Finish with the end sentinel.\n\nSELF-CHECK LINE\n✔ R1 ✔ R2 ✔ R3\n\nBEGIN RESPONSE WITH:\n✔ R1 ✔ R2 ✔ R3\n### FILE OUTPUT START relative file name, line count  ###"
  }
]